name: Parse Volunteer Submission

on:
  issues:
    types: [opened]

permissions:
  contents: write

jobs:
  parse-submission:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install clicksend-client ics pyyaml

      - name: Install yq for YAML parsing
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Save issue body to file
        run: echo "${{ github.event.issue.body }}" > issue_body.txt

      - name: Debug issue body content
        run: cat issue_body.txt

      - name: Run submission parser on real submission
        run: |
          python process_submission.py --issue-body "$(cat issue_body.txt)" --notify-sms

      - name: Commit and push updated schedule files
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add volunteer_input.yaml docs/volunteer_schedule.json
          git diff --staged
          git commit -m "Update volunteer schedule after new submission" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git push origin HEAD:${{ github.ref_name }}

      - name: Print updated volunteer_input.yaml
        run: cat volunteer_input.yaml

      - name: Send SMS notification to last volunteer who opted in
        if: contains(github.event.issue.body, 'Notify me via SMS')
        env:
          CLICKSEND_USERNAME: ${{ secrets.CLICKSEND_USERNAME }}
          CLICKSEND_API_KEY: ${{ secrets.CLICKSEND_API_KEY }}
        run: |
          # Find the last volunteer with notify_sms: true in volunteer_input.yaml
          phone=$(yq e 'reverse | .[] | select(.notify_sms == true) | .phone' volunteer_input.yaml | head -n 1)
          name=$(yq e 'reverse | .[] | select(.notify_sms == true) | .name' volunteer_input.yaml | head -n 1)
          echo "Sending SMS to $name at $phone"
          python send_sms.py "$phone" "$name"
