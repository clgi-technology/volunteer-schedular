name: Parse Volunteer Submission

on:
  issues:
    types: [opened]

permissions:
  contents: write

jobs:
  parse-submission:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          pip install clicksend-client ics pyyaml

      - name: Extract volunteer name and shifts from issue body
        id: extract
        run: |
          ISSUE_BODY=$(jq -r .issue.body "$GITHUB_EVENT_PATH")

          echo "📄 Raw issue body:"
          echo "$ISSUE_BODY"
          echo "-----"

          NAME=$(echo "$ISSUE_BODY" | sed -n '/### Full Name/{n;p;}' | xargs)
          PHONE=$(echo "$ISSUE_BODY" | sed -n '/### Phone Number/{n;p;}' | xargs)

          SHIFTS=$(echo "$ISSUE_BODY" | awk '/### What shifts are you available for\?/{flag=1; next} /^### /{flag=0} flag')
          CLEANED_SHIFTS=$(echo "$SHIFTS" | sed '/^\s*$/d')

          echo "👤 Name: '$NAME'"
          echo "📱 Phone: '$PHONE'"
          echo "📆 Shifts:"
          echo "$CLEANED_SHIFTS"

          if [ -z "$NAME" ] || [ -z "$CLEANED_SHIFTS" ]; then
            echo "❌ Error: Missing required 'name' or 'shifts'"
            exit 1
          fi

          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "phone=$PHONE" >> $GITHUB_OUTPUT
          echo "shifts<<EOF" >> $GITHUB_OUTPUT
          echo "$CLEANED_SHIFTS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run volunteer_schedule.py script
        run: |
          python volunteer_schedule.py \
            --name "${{ steps.extract.outputs.name }}" \
            --phone "${{ steps.extract.outputs.phone }}" \
            --shifts "$(echo "${{ steps.extract.outputs.shifts }}" | python3 -c "import sys,json; import re; from datetime import datetime; lines=sys.stdin.read().strip().split('\n'); shifts=[]; \
for line in lines: \
  parts = re.split(r'\\s+[-–—]\\s+', line); \
  if len(parts) == 2: \
    dt = datetime.strptime(parts[0].strip(), '%A %B %d, %Y, %I:%M %p').strftime('%Y-%m-%d %H:%M'); \
    shifts.append({'date': dt.split()[0], 'time': dt.split()[1], 'role': parts[1].strip()}); \
print(json.dumps(shifts))") \
            --notify_sms
